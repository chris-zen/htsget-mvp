name: tests

on: [push]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest]
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.rust }}
            override: true
            components: rustfmt, clippy
      - name: Cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-cache3-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-cache3-
      # - name: Cargo fmt
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fmt
      # - name: Clippy
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: -- -D warnings
      # - name: Build all features
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --all-targets --all-features
      # - name: Build no default features
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --all-targets --no-default-features
      # - name: Build s3-storage feature
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --all-targets --features s3-storage
      # - name: Run cargo test
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: test
      #     args: --all-features
      # Benchmarking
      - name: Install cargo-criterion
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-criterion
      - name: Timestamp
        run: export BENCH_TIMESTAMP=$(date +'%Y-%m-%d-%s')
      - name: Run search benchmarks
        run: cargo criterion --bench search-benchmarks --message-format=json -- LIGHT 1> output.json
      - name: Store search benchmark result
        uses: brainstorm/github-action-benchmark@cargo-criterion-v3
        with:
          name: Search benchmark
          tool: 'cargo-criterion'
          output-file-path: /home/runner/work/htsget-rs/htsget-rs/output.json
          native-benchmark-data-dir-path: target/criterion
          fail-on-alert: false
          github-token: ${{ secrets.HTSGET_RS_BENCHMARKS_TOKEN }}
          auto-push: true
      - name: Run release-plz
        uses: MarcoIeni/release-plz-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.HTSGET_RS_CRATES_IO_TOKEN }}